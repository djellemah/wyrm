#! /usr/bin/env ruby

require 'pathname'
require 'uri'

def restore( directory, db, drop_tables: false )
  require 'wyrm/restore_schema'
  rs = RestoreSchema.new db, directory
  rs.call
end

def dump( db, directory )
  require 'wyrm/dump_schema'
  ds = DumpSchema.new db, directory
  ds.call
end

if ARGV.empty?
  puts <<EOF
Usage: #{$0} src_db|dirname dst_db|dirname

dirname contains a set of wyrm dump files, or will soon.

sample db strings:
  postgres://localhost/lotsa_datsa
  mysql://root:pwned@localhost/lotsa_datsa
  mysql2://root:pwned@localhost/lotsa_fastsa_datsa
EOF
end

src, dst = ARGV.map{|arg| URI.parse arg}

if Pathname(dst.path).exist? && Pathname(src.path).exist?
  puts "No point copying one directory to another. Just use filesystem tools. It's faster."
  exit(1)
end

if src.scheme && Pathname(dst.path).exist?
  # src is a db path, so dump from it
  dump src.to_s, dst.path
elsif dst.scheme && Pathname(src.path).exist?
  # dst is a path and src is a url, so restore
  restore src.to_s, dst.path
else
  require 'wyrm/hole.rb'
  Wyrm::Hole.new( src.to_s, dst.to_s ).transfer
end
